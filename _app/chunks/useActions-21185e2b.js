import{I as M,ay as m,az as j,aA as O}from"./vendor-394a6f70.js";function P(o){return Object.entries(o).filter(([s,r])=>s!==""&&r).map(([s])=>s).join(" ")}function x(o,s,r,n={bubbles:!0},t=!1){if(typeof Event!="undefined"&&o){const e=new CustomEvent(s,Object.assign(Object.assign({},n),{detail:r}));if(o==null||o.dispatchEvent(e),t&&s.startsWith("SMUI")){const i=new CustomEvent(s.replace(/^SMUI/g,()=>"MDC"),Object.assign(Object.assign({},n),{detail:r}));o==null||o.dispatchEvent(i),i.defaultPrevented&&e.preventDefault()}return e}}const b=/^[a-z]+(?::(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/,A=/^[^$]+(?:\$(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/;function U(o){let s,r=[];o.$on=(t,e)=>{let i=t,a=()=>{};return s?a=s(i,e):r.push([i,e]),i.match(b)&&console&&console.warn('Event modifiers in SMUI now use "$" instead of ":", so that all events can be bound with modifiers. Please update your event binding: ',i),()=>{a()}};function n(t){m(o,t)}return t=>{const e=[],i={};s=(a,v)=>{let c=a,d=v,f=!1;const g=c.match(b),w=c.match(A),E=g||w;if(c.match(/^SMUI:\w+:/)){const l=c.split(":");let p="";for(let u=0;u<l.length;u++)p+=u===l.length-1?":"+l[u]:l[u].split("-").map(y=>y.slice(0,1).toUpperCase()+y.slice(1)).join("");console.warn(`The event ${c.split("$")[0]} has been renamed to ${p.split("$")[0]}.`),c=p}if(E){const l=c.split(g?":":"$");c=l[0];const p=Object.fromEntries(l.slice(1).map(u=>[u,!0]));p.passive&&(f=f||{},f.passive=!0),p.nonpassive&&(f=f||{},f.passive=!1),p.capture&&(f=f||{},f.capture=!0),p.once&&(f=f||{},f.once=!0),p.preventDefault&&(d=j(d)),p.stopPropagation&&(d=O(d))}const $=M(t,c,d,f),h=()=>{$();const l=e.indexOf(h);l>-1&&e.splice(l,1)};return e.push(h),c in i||(i[c]=M(t,c,n)),h};for(let a=0;a<r.length;a++)s(r[a][0],r[a][1]);return{destroy:()=>{for(let a=0;a<e.length;a++)e[a]();for(let a of Object.entries(i))a[1]()}}}}function C(o,s){let r=[];if(s)for(let n=0;n<s.length;n++){const t=s[n],e=Array.isArray(t)?t[0]:t;Array.isArray(t)&&t.length>1?r.push(e(o,t[1])):r.push(e(o))}return{update(n){if((n&&n.length||0)!=r.length)throw new Error("You must not change the length of an actions array.");if(n)for(let t=0;t<n.length;t++){const e=r[t];if(e&&e.update){const i=n[t];Array.isArray(i)&&i.length>1?e.update(i[1]):e.update()}}},destroy(){for(let n=0;n<r.length;n++){const t=r[n];t&&t.destroy&&t.destroy()}}}}export{P as c,x as d,U as f,C as u};
